labs(subtitle="House $$$",
y="House Price",
x="Square Feet",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(houseData, aes(x=squareFeet, y=housePrice)) +
geom_point(size = 10, shape = 18, color = "purple") +
geom_smooth(method="lm", se=F) +
labs(subtitle="House $$$",
y="House Price",
x="Square Feet",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(houseData, aes(x=squareFeet, y=housePrice)) +
geom_point(size = 10, shape = 15, color = "purple") +
geom_smooth(method="lm", se=F) +
labs(subtitle="House $$$",
y="House Price",
x="Square Feet",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(houseData, aes(x=squareFeet, y=housePrice)) +
geom_point(size = 10, shape = 15, color = "purple") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="darkred", fill="blue") +
labs(subtitle="House $$$",
y="House Price",
x="Square Feet",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(houseData, aes(x=squareFeet, y=housePrice)) +
geom_point(size = 10, shape = 15, color = "purple") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="gold") +
labs(subtitle="House $$$",
y="House Price",
x="Square Feet",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
res <- gtrends(c("seahawks score" , "patriots score"), geo = c("US-WA", "US-MA"), time = "today 3-m")
library(reshape2)
library(tidyverse) # load the tidyverse for all of our wrangling and visualization needs
library(gtrendsR) # load the packages for downloading google trends data
library(kableExtra) # load the package for making pretty tables
res <- gtrends(c("seahawks score" , "patriots score"), geo = c("US-WA", "US-MA"), time = "today 3-m")
plot(res)
head(res)
ggplot(data=res, aes(x=res$interest_over_time$date, y=res$interest_over_time$hits, group=1)) +
geom_line()+
geom_point()
ggplot(data=res$interest_over_time, aes(x=res$interest_over_time$date, y=res$interest_over_time$hits, group=1)) +
geom_line()+
geom_point()
res <- gtrends(c("seahawks score" , "patriots score"), geo = c("US-WA", "US-MA"), time = "today 3-m")
plot(res)
head(res)
ggplot(data=res$interest_over_time, aes(x=res$interest_over_time$date, y=res$interest_over_time$hits, group=1)) +
geom_line()+
geom_point()
res <- gtrends(c("seahawks score" , "patriots score"), geo = c("US-WA", "US-MA"), time = "today 3-m")
plot(res)
head(res)
ggplot(data=res$interest_over_time, aes(x=res$interest_over_time$date, y=res$interest_over_time$hits, group=1)) +
geom_line()+
geom_point()
res <- gtrends(c("seahawks score" , "patriots score"), geo = c("US-WA", "US-MA"), time = "today 3-m")
plot(res)
head(res)
ggplot(data=res$interest_over_time, aes(x=res$interest_over_time$date, y=res$interest_over_time$hits, group=res$interest_over_time$keyword)) +
geom_line()+
geom_point()
carWeb()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(Duncan)
```{r}
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 10, shape = 15, color = "purple") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="gold") +
labs(subtitle="House $$$",
y="House Price",
x="Square Feet",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 10, shape = 15, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 7, shape = 15, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 7, shape = 5, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 7, shape = 1, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 7, shape = 2, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 7, shape = 30, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 7, shape = 13, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 7, shape = 1, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)
theme_set(theme_bw())  # pre-set the bw theme.
gg <- ggplot(Duncan, aes(x=income, y=prestige)) +
geom_point(size = 7, shape = 1, color = "red") +
geom_smooth(method="lm", se=F, linetype="dashed",
color="blue") +
labs(subtitle="Duncan",
y="Prestige",
x="Income",
title="Scatterplot",
caption = "Source: houseData")
plot(gg)
res <- gtrends(c("seahawks score" , "patriots score"), geo = c("US-WA", "US-MA"), time = "today 3-m")
plot(res)
head(res)
ggplot(data=res$interest_over_time, aes(x=res$interest_over_time$date, y=res$interest_over_time$hits, group=res$interest_over_time$keyword)) +
geom_line()+
geom_point()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("htmlwidgets")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(car)
head(Prestige)
head(Prestige)
hist(income)
head(Prestige)
hist(Prestige$income)
head(Prestige)
hist(Prestige$income, freq = FALSE)
head(Prestige)
hist(Prestige$income, freq = FALSE)
head(Prestige)
hist(Prestige$income,)
head(Prestige)
hist(Prestige$income)
hist(Prestige$income, breaks = "FD", col="purple")
hist(Prestige$income, breaks = "FD", col="purple")
box()
hist(Prestige$income, breaks = "FD", col="purple")
box()
stem(Prestige$income)
hist(Prestige$income, breaks = "FD", freq=FALSE, ylab = "Density")
lines(density(income), lwed = 2)
hist(Prestige$income, breaks = "FD", freq=FALSE, ylab = "Density")
lines(density(Prestige$income), lwed = 2)
lines(density(Prestige$income, adjust = 0.5), lwd = 1)
rug(Prestige$income)
box()
hist(Prestige$income, breaks = "FD", freq=FALSE, ylab = "Density")
lines(density(Prestige$income), lwd = 2)
lines(density(Prestige$income, adjust = 0.5), lwd = 1)
rug(Prestige$income)
box()
qqPlot(Prestige$income, labels = row.names(Prestige), id.n = 3)
with(Prestige, qqPlot(income, labels=row.names(Prestige), id.n=3))
with(Prestige, qqPlot(income, labels=row.names(Prestige)))
with(Prestige, qqPlot(income))
with(Prestige, qqPlot(income, labels(row.names(Prestige))))
with(Prestige, qqPlot(income, labels+row.names(Prestige)))
with(Prestige, qqPlot(income, labels=row.names(Prestige)))
?qqPlot
with(Prestige, qqPlot(income, id.n=3))
with(Prestige, qqPlot(income)
with(Prestige, qqPlot(income))
with(Prestige, qqPlot(income), id.n=3)
with(Prestige, qqPlot(income), labels=row.names(Prestige), id.n=3)
with(Prestige, qqPlot(income), labels=row.names(Prestige), id.n=3)
with(Prestige, qqPlot(income), labels=row.names(Prestige), id.n=3)
Boxplot(~ income, date=Prestige)
Boxplot(~ Prestige$income, date=Prestige)
plot( Prestige$prestige ~ Prestige$income)
E(Prestige$prestige | Prestige$income)
attach(Prestige)
scatterplot(prestige ~ income, span=0.6, lwd=3,
id.n=4, data=Prestige)
scatterplot(prestige~income|type, data=Prestige, boxplots=FALSE, +       span=0.75, col=gray(c(0, 0.5, 0.7)), id.n=0)
scatterplot(prestige~income|type, data=Prestige, boxplots=FALSE, span=0.75, col=gray(c(0, 0.5, 0.7)), id.n=0)
head(Vocab)
head(Vocab)
nrow(Vocab)
head(Vocab)
nrow(Vocab)
plot(vocabulary ~ education, data=Vocab)
plot(jitter(vocabulary) ~ jitter(education), data=Vocab)
plot(jitter(vocabulary, factor=2) ~ jitter(education, factor=2), col="gray", cex=0.5, data=Vocab)
plot(jitter(vocabulary, factor=2) ~ jitter(education, factor=2), col="gray", cex=0.5, data=Vocab)
abline(lm(Vocab$vocabulary ~ Vocab$education), lwd = 3, lty="dashed")
lines(lowess(Vocab$education, Vocab$vocabulary, f=0.2), lwd=3)
attach(Ornstein)
attach(Ornstein)
Boxplot(interlocks ~ nation, data = Ornstein, main="(a)")
install.packages("plotrix")
library(plotrix)
means <- with(Ornstein, tapply(interlocks, nation, mean))
sds <- with(Ornstein, tapply(interlocks, nation, sd))
plotCI(1:4, means, sds, xaxt="n", xlab="Nation of Control",
ylab="interlocks", main="(b)", ylim=c(0, 100))
lines(1:4, means) > axis(1, at=1:4, labels = names(means))
scatter3d(prestige ~ income + education, id.n=3, data=Duncan)
attach(Duncan)
scatter3d(prestige ~ income + education, id.n=3, data=Duncan)
attach(Duncan)
scatter3d(prestige ~ income + education, id.n=3, data=Duncan)
install.packages("rgl")
install.packages("rgl")
library(rgl)
attach(Duncan)
library(rgl)
library(car)
attach(Duncan)
scatter3d(prestige ~ income + education, id.n=3, data=Duncan)
library(rgl)
library(car)
attach(Duncan)
scatter3d(prestige ~ income + education, id.n=3, data=Duncan)
source('~/.active-rstudio-document', echo=TRUE)
scatter3d(prestige ~ income + education, id.n=3, data=Duncan)
scatterplotMatrix(~ prestige + income + education + women, + span=0.7, data=Prestige)
scatterplotMatrix(~ prestige + income + education + women, span=0.7, data=Prestige)
par(mfrow=c(1, 2))
with(Ornstein, plot(density(assets), xlab="assets", main="(a)"))
with(Ornstein, plot(density(log10(assets)),
xlab="base−10 log of assets", main="(b)"))
par(mfrow=c(1, 2))
with(Ornstein, plot(density(assets), xlab="assets", main="(a)"))
with(Ornstein, plot(density(log(assets)),
xlab="base−10 log of assets", main="(b)"))
par(mfrow=c(1, 2))
with(Ornstein, plot(density(assets), xlab="assets", main="(a)"))
with(Ornstein, plot(density(log10(assets)),
xlab="base−10 log of assets", main="(b)"))
scatterplot(infant.mortality ~ gdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
attach(UN)
scatterplot(infant.mortality ~ gdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
library(car)
attach(UN)
scatterplot(infant.mortality ~ gdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
library(car)
scatterplot(UN$infant.mortality ~ UN$gdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
library(car)
scatterplot(UN$infant.mortality ~ UN$gdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
library(car)
objects()
library(car)
data.frame()
library(car)
data.frame(UN)
library(car)
attach(UN)
library(car)
attach(UN)
scatterplot(infant.mortality ~ gdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
ibrary(car)
library(car)
attach(UN)
scatterplot(infant.mortality ~ gdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
data.frame(UN)
library(car)
attach(UN)
scatterplot(infantMortality ~ gdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
library(car)
attach(UN)
scatterplot(infantMortality ~ ppgdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
scatterplot(infantMortality ~ ppgdp, data=UN, xlab="GDP per capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(b)",
log="xy", boxplots=FALSE, id.n=4)
library(car)
attach(UN)
scatterplot(infantMortality ~ ppgdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
scatterplot(infantMortality ~ ppgdp, data=UN, xlab="GDP per capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(b)",
log="xy", boxplots=FALSE, id.n=4)
options( scipen=999)
library(car)
attach(UN)
scatterplot(infantMortality ~ ppgdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
scatterplot(infantMortality ~ ppgdp, data=UN, xlab="GDP per capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(b)",
log="xy", boxplots=FALSE, id.n=4, options( scipen=999))
library(car)
attach(UN)
scatterplot(infantMortality ~ ppgdp, data=UN, xlab="GDP per Capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(a)",
boxplot=FALSE)
scatterplot(infantMortality ~ ppgdp, data=UN, xlab="GDP per capita",
ylab="Infant Mortality Rate (per 1000 births)", main="(b)",
log="xy", boxplots=FALSE, id.n=4)
(gdpMortReg <- lm(log(infant.mortality) ~ log(gdp), data=UN))
(gdpMortReg <- lm(log(infantMortality) ~ log(gdp), data=UN))
(gdpMortReg <- lm(log(infantMortality) ~ log(ppgdp), data=UN))
input.file2 <- "RedandWhite.csv"
red.white <- read.csv(input.file2)
library(car)
library(ggplot2)
library(GGally)
input.file <- "piesales.csv"
pie.data <- read.csv(input.file)
pieReg <- lm(pie.data$pieSales ~ pie.data$price + pie.data$advert)
scatterplotMatrix(~pie.data$pieSales + pie.data$price + pie.data$advert, span = 0.7 )
summary(pieReg)
ggpairs(pie.data[,2:4])
input.file2 <- "RedandWhite.csv"
red.white <- read.csv(input.file2)
head(red.white)
wineReg <- lm(red.white$Quality.1 ~ red.white$Sulphates + red.white$Chlorides + red.white$Residual.Sugar + red.white$Citric.Acid + red.white$Alcohol)
#
scatterplotMatrix(~red.white$Quality.1 + red.white$Sulphates + red.white$Chlorides + red.white$Residual.Sugar + red.white$Citric.Acid + red.white$Alcohol )
wineReg <- lm(red.white$Quality.1 ~ red.white$Sulphates + red.white$Chlorides + red.white$Residual.Sugar + red.white$Citric.Acid + red.white$Alcohol)
#scatterplotMatrix(~red.white$Quality.1 + red.white$Sulphates + red.white$Chlorides + red.white$Residual.Sugar + red.white$Citric.Acid + red.white$Alcohol )
wineReg <- lm(red.white$Quality.1 ~ red.white$Sulphates + red.white$Chlorides + red.white$Residual.Sugar + red.white$Citric.Acid + red.white$Alcohol)
summary(wineReg)
#scatterplotMatrix(~red.white$Quality.1 + red.white$Sulphates + red.white$Chlorides + red.white$Residual.Sugar + red.white$Citric.Acid + red.white$Alcohol )
library(car)
library(ggplot2)
library(GGally)
input.file <- "piesales.csv"
pie.data <- read.csv(input.file)
library(dplyr)
redWhite <- red.white %>%
select(red.white$Quality.1, red.white$Sulphates, red.white$Chlorides, red.white$Residual.Sugar, red.white$Citric.Acid, red.white$Alcohol)
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
ggpairs(redWhite, [,1:6])
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
ggpairs(redWhite[,1:6])
library(car)
library(ggplot2)
library(GGally)
library(dplyr)
input.file <- "piesales.csv"
pie.data <- read.csv(input.file)
options(scipen = 999)
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
ggpairs(redWhite[,1:6])
wineReg <- lm(red.white$Quality.1 ~ red.white$Sulphates + red.white$Chlorides + red.white$Residual.Sugar + red.white$Citric.Acid + red.white$Alcohol)
summary(wineReg)
#scatterplotMatrix(~red.white$Quality.1 + red.white$Sulphates + red.white$Chlorides + red.white$Residual.Sugar + red.white$Citric.Acid + red.white$Alcohol )
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
ggpairs(redWhite[,1:6], lower=list(continuous="smooth", params=c(colour="blue")),
diag=list(continuous="bar", params=c(colour="blue")),
upper=list(params=list(corSize=6)), axisLabels='show')
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
ggpairs(redWhite[,1:6], lower=list(continuous="smooth", params=c(colour="blue")),
diag=list(continuous="bar"),
upper=list(params=list(corSize=6)), axisLabels='show')
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
ggpairs(redWhite[,1:6], lower=list(continuous="smooth",
diag=list(continuous="bar"),
upper=list(params=list(corSize=6)), axisLabels='show')
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
ggpairs(redWhite[,1:6])
redWhite <- red.white %>%
select("Quality.1", "Sulphates", "Chlorides", "Residual.Sugar", "Citric.Acid", "Alcohol")
ggcorr(redWhite[,1:6])
ggpairs(redWhite[,1:6], geom_smooth(method=lm, fill="blue", color="blue")
ggpairs(redWhite[,1:6]) {geom_smooth(method=lm, fill="blue", color="blue")}
ggpairs(redWhite[,1:6])
{geom_smooth(method=lm, fill="blue", color="blue")}
source('~/Documents/GitHub/tidytuesday/VoterTurnout2.R', echo=TRUE)
